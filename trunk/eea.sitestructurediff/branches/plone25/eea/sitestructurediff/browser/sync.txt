eea.sitestructurediff provides a "paste translations" in action menu. This is 
the paste command plus syncing translations with the canonical move. 

!!! For now the translations are always moved even if the canonical is just 
    copied. !!!

Lets make a normal paste and save the results.

  >>> folder = self.portal.folder
  >>> destFolder = folder.Folder1.Folder1.Folder1
  >>> cp = folder.manage_cutObjects(ids=['Folder2'])
  >>> res = destFolder.manage_pasteObjects(cp)
  >>> res[0]['new_id'] == res[0]['id']
  True
  >>> folder.objectIds()
  ['Folder2-sv', 'Folder2-pl', 'Folder1', 'Folder1-sv', 'Folder1-pl']
  >>> destFolder.objectIds()
  ['Document3', 'Document2', 'Document1', 'Folder2']

When an object is moved you have the option to make the same move of 
translations. The eea.sitestructurediff.browsedr.sync.SyncMove view 
provides a method to move translations of the moved canonical.
This view expects the result of the recent call to manage_pasteObjects

We verify that the translatied destination folders don't have the 
expected objects.

  >>> destFolder.getTranslation('sv').objectIds()
  ['Document3', 'Document2', 'Document1']
  >>> destFolder.getTranslation('pl').objectIds()
  ['Document3', 'Document2', 'Document1']


Lets syncronize the move above

  >>> from eea.sitestructurediff.browser.sync import SyncMove
  >>> view = SyncMove(destFolder, folder.REQUEST)
  >>> view.sync(res)

We should now have each translation in the translated destination 
folder.

  >>> destFolder.getTranslation('sv').objectIds()
  ['Document3', 'Document2', 'Document1', 'Folder2-sv']
  >>> destFolder.getTranslation('pl').objectIds()
  ['Document3', 'Document2', 'Document1', 'Folder2-pl']
  


 

